









## This is a basic workflow to help you get started with Actions
#
#name: CI
#
## Controls when the action will run.
#on:
#  # Triggers the workflow on push or pull request events but only for the main branch
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]
#
#  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:
#
## A workflow run is made up of one or more jobs that can run sequentially or in parallel
#jobs:
#  # This workflow contains a single job called "build"
#  Codestyle:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v2
#
#      # Runs a single command using the runners shell
#      - name: install dependencies
#        run: pip install flake8
#
#      - name: codestyle
#        run: python -m flake8 ./ --ignore=F401,E402
#  tests:
#    runs-on: ubuntu-latest
#    needs: Codestyle
#    steps:
#      - uses: actions/checkout@v2
#      - name: tests
#        run: |
#          pip install -e '.[test]'
#          python -m coverage run -m pytest
#          python -m coverage report
#
#  Deploy:
#    runs-on: ubuntu-latest
#    needs: tests
#    steps:
#      - uses: actions/checkout@v2
#      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
#        with:
#          heroku_api_key: ${{secrets.API_KEY}}
#          heroku_app_name: "my-webb-calculator" #Must be unique in Heroku
#          heroku_email: "paemshanov@edu.hse.ru"
#
#
  

name: CI

on:
  push:
    branches: [ main ]

jobs:

  setup-python:
    runs-on: self-hosted
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
            python-version: ${{ matrix.python-version }}
      - name: Install deps
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt

  codestyle:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Install deps
        run: pip install flake8
      - name: Check codestyle
        run: python3 -m flake8 ./ --ignore=F401,E402

  test:
    runs-on: self-hosted
    needs: [setup-python, codestyle]
    steps:
      - uses: actions/checkout@v2
      - name: Install deps
        run: |
          pip install -e '.[test]'
          python3 -m coverage run -m pytest
          python3 -m coverage report

  build_and_pub:
    runs-on: self-hosted
    needs: test
    steps:
      - name: Login to docker.io
        run: echo ${{ secrets.DOCKER_PWD }} | sudo docker login -u ${{ secrets.DOCKER_LOG }} --password-stdin
      - uses: actions/checkout@master
      - name: Build image
        run: sudo docker build -t flask_app:v0.1 -f Dockerfile .
      - name: Tag
        run: sudo docker tag flask_app:v0.1 rburtsev/rburtsev
      - name: Push image to dockerhub
        run: sudo docker push rburtsev/rburtsev
      - name: Docker run
        run: sudo docker run -d -p 8080:5000 --name test 28122001/test:rburtsev/rburtsev
  


